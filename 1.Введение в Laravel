Чтобы установить и настроить Laravel, понадобится Composer, менеджер зависимостей для PHP. Вот основные шаги:
Установка Composer:
Скачать и установить Composer с официального сайта getcomposer.org.

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"


Установка Laravel:
Открыть командную строку или терминал.
скопировать файл composer.json из мудла в домашнюю папку
Выполнить команду php composer.phar global require laravel/installer #для установки Laravel Installer.

#Эту часть лучше выполнять, если ларавель уже настроен
Выполнить команду laravel new имя_проекта, чтобы создать новый проект Laravel. Заменить имя_проекта на желаемое имя проекта.
Если не настроен Laravel Installer, использовать команду Composer: php composer.phar create-project --prefer-dist laravel/laravel имя_проекта.


чтобы настроить laravel установим пусть к нему в PATH
выясним куда был установлен laravel?
1. php composer.phar global config bin-dir --absolute № в моем случае путь /home/teacher/.config/composer/vendor/bin
2. открываем конфигурацию nano ~/.bashrc
3. записываем в конец файла полученный путь export PATH="$PATH:/home/teacher/.config/composer/vendor/bin"
4. Добавим сюда также конфигурацию для composer : alias composer="php ~/composer.phar"
5. Сохраняем, закрываем Ctrl + O, Enter, Ctrl + X
6. проверяем что переменная PATH содержит путь до laravel 
Иногда нужно открыть новое терминальное окно, чтобы увидеть новое значение $PATH, либо выполнить source ~/.bashrc
Итак echo $PATH показывает нам что-то и /home/teacher/.config/composer/vendor/bin
7. чтобы создать символическую ссылку для composer нужно выполнить команду:   ln -s ~/composer.phar /home/teacher/.config/composer/vendor/bin/composer
Теперь можно приступать к созданию проекта

Создание нового проекта Laravel:
если еще не выполнили команду laravel new, самое время, имейте ввиду, что если не указывать путь до проекта он создастся в текущем каталоге
laravel new имя_проекта. Не нужно добавлять расширения к имени файла, так как создасться новая папка с именем проекта и в нем будем искать шаблон .env.example

Настройка окружения:
Перейти в каталог проекта Laravel.
Елси вы не видите файл .env, но видите .env.example, то нужно переименовать файл .env.example в .env.
Открыть файл .env в текстовом редакторе и настроить параметры окружения, такие как настройки базы данных и другие.
Генерация ключа приложения:
Генерация ключа приложения в Laravel необходима для обеспечения дополнительной безопасности приложения. Этот ключ используется фреймворком для шифрования сессий, кук и других данных, которые требуют безопасного хранения. После того как вы копируете файл .env.example и создаете из него .env, следует сгенерировать уникальный ключ приложения с помощью команды php artisan key:generate.

Команда php artisan key:generate 
вы увидете Application key set successfully.

Запуск сервера разработки:
Можно запустить встроенный сервер разработки Laravel, используя команду php artisan serve
вы увидете 
Starting Laravel development server: http://127.0.0.1:8000
[Sat Apr 13 13:43:36 2024] PHP 7.4.3-4ubuntu2.20 Development Server (http://127.0.0.1:8000) started

После этого Laravel будет доступен в браузере по адресу http://localhost:8000.
Убедиться, что установлен PHP и все необходимые расширения, а также настроен сервер базы данных перед тем, как начать работу с Laravel. 



Выбор среды разработки (IDE) для работы с Laravel зависит от личных предпочтений и требований к функционалу. 
Вот несколько популярных IDE, которые хорошо подходят для работы с Laravel и PHP в целом:

1. PHPStorm: Это платная, но очень мощная среда разработки от JetBrains, специально разработанная для PHP. 
PHPStorm предлагает глубокую интеграцию с Laravel, включая поддержку Blade шаблонов, а также множество других полезных функций, таких как рефакторинг, поиск ошибок в коде и интеграция с системами контроля версий.
2. Visual Studio Code (VS Code): Это бесплатный, легкий и расширяемый редактор кода от Microsoft. С помощью плагинов, таких как PHP Intelephense и Laravel Extension Pack, VS Code может предложить многие из функций, доступных в более специализированных IDE.
3. Sublime Text: Это еще один быстрый и гибкий редактор кода, который можно настроить под разработку Laravel с помощью различных пакетов и плагинов.
4. NetBeans: Это бесплатная IDE, которая также поддерживает разработку на PHP и имеет некоторые инструменты для работы с Laravel.
5. Eclipse PDT: Это бесплатная IDE, которая может быть настроена для работы с PHP и Laravel, хотя она может быть менее интуитивной в сравнении с другими перечисленными IDE.
Важно выбрать среду разработки, которая наиболее удобна именно вам, и которая позволяет повысить вашу продуктивность. PHPStorm часто рекомендуется для серьезной разработки на Laravel из-за ее богатых функций и интеграции, но если вы предпочитаете бесплатные варианты или вам нужен более легковесный инструмент, VS Code или Sublime Text могут быть отличными вариантами. 

PyCharm, хотя и преимущественно известен как IDE для Python, также поддерживает работу с PHP, особенно в его профессиональной версии. Вы можете открыть и работать с проектом Laravel в PyCharm, но учтите, что некоторые специфические функции для Laravel, такие как интеграция с Artisan, могут быть не так хорошо поддержаны, как в PHPStorm, который является специализированной IDE для PHP от той же компании JetBrains.
Если вы уже имеете PyCharm и привыкли к его интерфейсу и функциям, вы вполне можете использовать его для работы с Laravel, особенно если у вас есть доступ к профессиональной версии. Однако, для наилучшей поддержки Laravel и PHP, PHPStorm остается предпочтительным вариантом
Нам же лучше всего подходит NetBeans.
Открываем программу в Разработка - Apache NetBeans
Переходим в tools, закладку Installed
Ставим галочку напротив PHP
Жмем кнопку снизу Activate и в диалоговом окне снова Activate
После этого закрываем все диалоговые окошки, и открываем проект, который мы создали в описании выше
Для этого выбираем каталог с проектом, рядом с именем проекта будет надпись php


